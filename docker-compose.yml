services:
  # Django
  app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    command: >
      sh -c "python manage.py wait_for_db &&
              python manage.py migrate &&
              python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    depends_on:
      - db

  # PostgreSQL Database
  db:
    container_name: db
    image: postgres:16.3-alpine3.20
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - db_vol:$PGDATA

  # Redis
  redis:
    image: "redis:alpine"

  # Celery
  celery:
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile
    command: "celery -A library_service worker -l info"
    env_file:
      - .env
    depends_on:
      - app
      - redis
      - db

  # Celery Beat
  beat:
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py wait_for_db &&
              celery -A library_service beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    env_file:
      - .env
    depends_on:
      - app
      - redis
      - db

  # Flower
  flower:
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5555:5555"
    command: "celery -A library_service flower --address=0.0.0.0"
    depends_on:
      - celery
    env_file:
      - .env

volumes:
  db_vol:
